<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>omathin blog</title>
  <icon>https://omathin.com/icon.png</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://omathin.com/"/>
  <updated>2021-01-19T15:00:00.000Z</updated>
  <id>https://omathin.com/</id>
  
  <author>
    <name>omathin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【85講座受講】技術者が推奨するUdemyのPython講座オススメ集</title>
    <link href="https://omathin.com/2021/01/20/udemy-python/"/>
    <id>https://omathin.com/2021/01/20/udemy-python/</id>
    <published>2021-01-19T15:00:00.000Z</published>
    <updated>2021-01-19T15:00:00.000Z</updated>
    
    <summary type="html">
    
      オンライン学習マニアである筆者がオススメする、オンライン学習プラットフォーム「Udemy」のPythonプログラミング講座を紹介します。実際に受講した所感含め、1. Python基礎文法/アルゴリズム, 2. Webアプリ開発, 3. データサイエンス, 4. AI/機械学習/ディープラーニング, 5. ディープラーニング特化講座（自然言語処理）にカテゴライズして紹介します。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="プログラミング" scheme="https://omathin.com/tags/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/"/>
    
      <category term="Python" scheme="https://omathin.com/tags/Python/"/>
    
      <category term="Udemy" scheme="https://omathin.com/tags/Udemy/"/>
    
  </entry>
  
  <entry>
    <title>【初心者レベル別】Web系エンジニアを目指すためのUdemyオススメ講座</title>
    <link href="https://omathin.com/2021/01/18/road-to-web-engineer/"/>
    <id>https://omathin.com/2021/01/18/road-to-web-engineer/</id>
    <published>2021-01-17T15:00:00.000Z</published>
    <updated>2021-01-19T15:00:00.000Z</updated>
    
    <summary type="html">
    
      Udemyで初心者（Progateでちょっと学んだレベル）の人がWeb系エンジニアを目指す際にオススメするUdemy講座をまとめました。PHP, Ruby, Pythonといった言語別にオススメの講座を整理してます。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="プログラミング" scheme="https://omathin.com/tags/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/"/>
    
      <category term="Udemy" scheme="https://omathin.com/tags/Udemy/"/>
    
  </entry>
  
  <entry>
    <title>【M1 Mac】Railsの開発環境をdocker-composeで作成する</title>
    <link href="https://omathin.com/2021/01/16/m1-mac-dockercompose-rails/"/>
    <id>https://omathin.com/2021/01/16/m1-mac-dockercompose-rails/</id>
    <published>2021-01-15T15:00:00.000Z</published>
    <updated>2021-01-15T15:00:00.000Z</updated>
    
    <summary type="html">
    
      M1 MacでRailsの開発環境をDockerで作成する方法です。docker-composeを用いて構築する方法なので、本記事で紹介しているファイルを用いれば、簡単に自動構築してくれます。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="docker" scheme="https://omathin.com/tags/docker/"/>
    
      <category term="コンテナ" scheme="https://omathin.com/tags/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A/"/>
    
      <category term="Rails" scheme="https://omathin.com/tags/Rails/"/>
    
      <category term="Ruby" scheme="https://omathin.com/tags/Ruby/"/>
    
      <category term="mysql" scheme="https://omathin.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo】Icarusテーマに吹き出しを加える方法</title>
    <link href="https://omathin.com/2021/01/12/hexo-icarus-speech-bubble/"/>
    <id>https://omathin.com/2021/01/12/hexo-icarus-speech-bubble/</id>
    <published>2021-01-11T15:00:00.000Z</published>
    <updated>2021-01-11T15:00:00.000Z</updated>
    
    <summary type="html">
    
      HexoでIcarusテーマにおいて、キャラクター付きの吹き出しコメントを加える方法をまとめました。私の記事は、愛犬の写真に青い吹き出しをつけたデザインを用いています。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="Hexo" scheme="https://omathin.com/tags/Hexo/"/>
    
      <category term="Icarus" scheme="https://omathin.com/tags/Icarus/"/>
    
  </entry>
  
  <entry>
    <title>【M1 Mac】Djangoの開発環境をdocker-composeで作成する</title>
    <link href="https://omathin.com/2021/01/10/docker-compose-django/"/>
    <id>https://omathin.com/2021/01/10/docker-compose-django/</id>
    <published>2021-01-09T15:00:00.000Z</published>
    <updated>2021-01-12T15:00:00.000Z</updated>
    
    <summary type="html">
    
      M1 MacでDjangoの開発環境をDockerで作成する方法です。docker-composeを用いて構築する方法なので、本記事で紹介しているファイルを用いれば、簡単に自動構築してくれます。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="docker" scheme="https://omathin.com/tags/docker/"/>
    
      <category term="コンテナ" scheme="https://omathin.com/tags/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A/"/>
    
      <category term="Django" scheme="https://omathin.com/tags/Django/"/>
    
      <category term="Python" scheme="https://omathin.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【Windows】DockerでRuby on Rails開発環境構築方法</title>
    <link href="https://omathin.com/2020/12/29/docker-ruby-on-rails/"/>
    <id>https://omathin.com/2020/12/29/docker-ruby-on-rails/</id>
    <published>2020-12-28T15:00:00.000Z</published>
    <updated>2020-12-28T15:00:00.000Z</updated>
    
    <summary type="html">
    
      4つのファイル(Dockerfile, Gemfile, Gemfile.lock, docker-compose.yml)を用意する必要があります。各ファイルが何なのか、どのように作成するのかも含めて記事にまとめました。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="docker" scheme="https://omathin.com/tags/docker/"/>
    
      <category term="コンテナ" scheme="https://omathin.com/tags/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A/"/>
    
  </entry>
  
  <entry>
    <title>【Python】Insertion Sortを学びながらPythonの基礎を身につける記事</title>
    <link href="https://omathin.com/2020/12/23/insertion-sort/"/>
    <id>https://omathin.com/2020/12/23/insertion-sort/</id>
    <published>2020-12-22T15:00:00.000Z</published>
    <updated>2020-12-22T15:00:00.000Z</updated>
    
    <summary type="html">
    
      本記事では、プログラミングにおけるアルゴリズムの練習として、Insertion Sortアルゴリズムを実装したいと思います。いきなり実装に入る前に、実装する上で必要なpythonの基礎もまとめていきたいと思います。 
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="python" scheme="https://omathin.com/tags/python/"/>
    
      <category term="プログラミング" scheme="https://omathin.com/tags/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/"/>
    
  </entry>
  
  <entry>
    <title>【Python】Selection Sortを学びながらPythonの基礎を身につける記事</title>
    <link href="https://omathin.com/2020/12/22/selection-sort/"/>
    <id>https://omathin.com/2020/12/22/selection-sort/</id>
    <published>2020-12-21T15:00:00.000Z</published>
    <updated>2020-12-21T15:00:00.000Z</updated>
    
    <summary type="html">
    
      本記事では、プログラミングにおけるアルゴリズムの練習として、Selection Sortアルゴリズムを実装したいと思います。 
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="python" scheme="https://omathin.com/tags/python/"/>
    
      <category term="プログラミング" scheme="https://omathin.com/tags/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/"/>
    
  </entry>
  
  <entry>
    <title>【自然言語処理】ファインチューニング(Fine-Tuning)とは何か</title>
    <link href="https://omathin.com/2020/12/21/what-is-fine-tuning/"/>
    <id>https://omathin.com/2020/12/21/what-is-fine-tuning/</id>
    <published>2020-12-20T15:00:00.000Z</published>
    <updated>2020-12-20T15:00:00.000Z</updated>
    
    <summary type="html">
    
      ファインチューニングとは、訓練済のモデルを各タスクに合わせて調整するように訓練することです。最初の時点で既存のモデルを適用し、そのモデルに対して訓練させたいデータ(例：自然言語処理であれば文章など)を与え、訓練をさせて、新たなモデルを作る処理がファインチューニングになります。ファインチューニングにおいて、既存の学習済モデルは、「特徴抽出器」として用いられ、パラメータの更新はされません。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="自然言語処理" scheme="https://omathin.com/tags/%E8%87%AA%E7%84%B6%E8%A8%80%E8%AA%9E%E5%87%A6%E7%90%86/"/>
    
      <category term="AI" scheme="https://omathin.com/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>【Python】Bubble Sortを学びながらPythonの基礎を身につける記事</title>
    <link href="https://omathin.com/2020/12/21/bubble-sort/"/>
    <id>https://omathin.com/2020/12/21/bubble-sort/</id>
    <published>2020-12-20T15:00:00.000Z</published>
    <updated>2020-12-20T15:00:00.000Z</updated>
    
    <summary type="html">
    
      本記事では、プログラミングにおけるアルゴリズムの練習として、Bubble Sortアルゴリズムを実装したいと思います。いきなり実装に入る前に、実装する上で必要なpythonの基礎もまとめていきたいと思います。 
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="python" scheme="https://omathin.com/tags/python/"/>
    
      <category term="プログラミング" scheme="https://omathin.com/tags/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/"/>
    
  </entry>
  
  <entry>
    <title>【自然言語処理】Transformerとは何か</title>
    <link href="https://omathin.com/2020/12/20/what-is-transformer/"/>
    <id>https://omathin.com/2020/12/20/what-is-transformer/</id>
    <published>2020-12-19T15:00:00.000Z</published>
    <updated>2020-12-19T15:00:00.000Z</updated>
    
    <summary type="html">
    
      Transformerとは、ディープラーニングモデルの一つで、主に自然言語処理の分野で使用されます。自然言語処理などの時系列データを処理するように設計されてますが、RNNで取り入れている再帰を用いていません。構造としては、EncoderとDecoderの２つで構成されています。本記事ではEncoderとDecoderに分けてTransformerの仕組みについてまとめてみました。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="自然言語処理" scheme="https://omathin.com/tags/%E8%87%AA%E7%84%B6%E8%A8%80%E8%AA%9E%E5%87%A6%E7%90%86/"/>
    
      <category term="AI" scheme="https://omathin.com/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>【自然言語処理】Attentionとは何か</title>
    <link href="https://omathin.com/2020/12/20/what-is-attention-1/"/>
    <id>https://omathin.com/2020/12/20/what-is-attention-1/</id>
    <published>2020-12-19T15:00:00.000Z</published>
    <updated>2020-12-19T15:00:00.000Z</updated>
    
    <summary type="html">
    
      Attentionとは、一言でいうと文章中のどの単語に注目すればよいのかを表すスコアです。 Attentionは、Query, Key, Valueという３つの要素に分かれて計算されます。 Queryとは、Inputデータであり、入力データの中で検索したいものを表します。Keyとは、検索すべき対象とQueryのち傘を図るために使用します。どれだけ似ているかを図るために使用します。Valueとは、Keyに基づいて適切なValueを出力する要素です。少し複雑ですが、Attentionとは何かをより詳しく見てみます。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="自然言語処理" scheme="https://omathin.com/tags/%E8%87%AA%E7%84%B6%E8%A8%80%E8%AA%9E%E5%87%A6%E7%90%86/"/>
    
      <category term="AI" scheme="https://omathin.com/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>【入門】OpenShiftを用いてビルドとデプロイメントを行う方法</title>
    <link href="https://omathin.com/2020/12/10/openshift-builds-and-deployments/"/>
    <id>https://omathin.com/2020/12/10/openshift-builds-and-deployments/</id>
    <published>2020-12-09T15:00:00.000Z</published>
    <updated>2020-12-09T15:00:00.000Z</updated>
    
    <summary type="html">
    
      RedHatが提供するOpenShiftを活用してPython on Flaskアプリをビルドする方法をまとめました。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="OpenShift" scheme="https://omathin.com/tags/OpenShift/"/>
    
      <category term="docker" scheme="https://omathin.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>【環境構築】OpenShiftの環境設定方法</title>
    <link href="https://omathin.com/2020/12/05/get-start-openshift/"/>
    <id>https://omathin.com/2020/12/05/get-start-openshift/</id>
    <published>2020-12-04T15:00:00.000Z</published>
    <updated>2020-12-04T15:00:00.000Z</updated>
    
    <summary type="html">
    
      RedHatが提供するOpenShiftの環境構築方法をまとめます。本記事ではMinishiftを使って開発やテストを目的とした簡単なOpenShift環境を設定する方法になります。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="OpenShift" scheme="https://omathin.com/tags/OpenShift/"/>
    
  </entry>
  
  <entry>
    <title>【入門】Swagger EditorでOpen APIを作る</title>
    <link href="https://omathin.com/2020/11/01/openapi-helloworld/"/>
    <id>https://omathin.com/2020/11/01/openapi-helloworld/</id>
    <published>2020-10-31T15:00:00.000Z</published>
    <updated>2020-11-01T15:00:00.000Z</updated>
    
    <summary type="html">
    
      Swagger editorを用いてOpenAPIを作成します。OpenAPIをSwagger Editorで作成する際は基本要素となるルートオブジェクトというものを理解する必要があります。必須項目であるオブジェクトは何なのかをしっかり把握してSwagger specを作成しましょう。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="API" scheme="https://omathin.com/tags/API/"/>
    
      <category term="swagger" scheme="https://omathin.com/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>REST API設計時に気を付ける主なポイント</title>
    <link href="https://omathin.com/2020/10/31/swagger-editor-design-firststep/"/>
    <id>https://omathin.com/2020/10/31/swagger-editor-design-firststep/</id>
    <published>2020-10-30T15:00:00.000Z</published>
    <updated>2020-10-30T15:00:00.000Z</updated>
    
    <summary type="html">
    
      REST APIを設計する際に気を付けるポイントは数多く存在します。その中でも、特に気を付けるべきポイントに絞って、記事をまとめてみました。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="API" scheme="https://omathin.com/tags/API/"/>
    
      <category term="swagger" scheme="https://omathin.com/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>Gitリポジトリを用いてSwaggerを起動する方法</title>
    <link href="https://omathin.com/2020/08/02/swagger-git/"/>
    <id>https://omathin.com/2020/08/02/swagger-git/</id>
    <published>2020-08-01T15:00:00.000Z</published>
    <updated>2020-08-01T15:00:00.000Z</updated>
    
    <summary type="html">
    
      GithubにあるSwagger Editorのリポジトリを活用してSwagger Editorを起動するには、Swagger EditorのリポジトリのReleasesから任意のバージョンのSwagger Editorのソースコードをダウンロードし、index.htmlを起動するだけでOKです。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="API" scheme="https://omathin.com/tags/API/"/>
    
      <category term="swagger" scheme="https://omathin.com/tags/swagger/"/>
    
      <category term="Git" scheme="https://omathin.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio CodeでSwagger viewerを導入する方法</title>
    <link href="https://omathin.com/2020/08/01/visualstudiocode-swagge-viewer/"/>
    <id>https://omathin.com/2020/08/01/visualstudiocode-swagge-viewer/</id>
    <published>2020-07-31T15:00:00.000Z</published>
    <updated>2020-10-31T15:00:00.000Z</updated>
    
    <summary type="html">
    
      Visual Studio Codeを起動し、左側の拡張機能をクリックし、「Swagger viewer」と検索窓に入力して検索しましょう。Shift + Alt + Pの3つのキーを押下してください。 するとVisual Studio Codeの右側に、Swagger UIが表示されます。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="API" scheme="https://omathin.com/tags/API/"/>
    
      <category term="swagger" scheme="https://omathin.com/tags/swagger/"/>
    
      <category term="VisualStudioCode" scheme="https://omathin.com/tags/VisualStudioCode/"/>
    
  </entry>
  
  <entry>
    <title>Swagger EditorをDockerで動かす方法</title>
    <link href="https://omathin.com/2020/07/31/swagger-get-start/"/>
    <id>https://omathin.com/2020/07/31/swagger-get-start/</id>
    <published>2020-07-30T15:00:00.000Z</published>
    <updated>2020-10-30T15:00:00.000Z</updated>
    
    <summary type="html">
    
      SwaggerはOpen APIを作成、表示、利用するツール郡です。Docker Playgroundという環境で手軽にSwagger Editorの環境を整え、使うことができますのでその方法を紹介します。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="API" scheme="https://omathin.com/tags/API/"/>
    
      <category term="docker" scheme="https://omathin.com/tags/docker/"/>
    
      <category term="コンテナ" scheme="https://omathin.com/tags/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A/"/>
    
      <category term="swagger" scheme="https://omathin.com/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo】Icarusテーマで画像を中心に寄せる方法</title>
    <link href="https://omathin.com/2020/05/28/hexo-image-center/"/>
    <id>https://omathin.com/2020/05/28/hexo-image-center/</id>
    <published>2020-05-27T15:00:00.000Z</published>
    <updated>2020-05-27T15:00:00.000Z</updated>
    
    <summary type="html">
    
      HexoでIcarusテーマを適用すると、画像が左よりになってしまいます。記事に掲載させる画像を中心に寄せたので、その方法をまとめたいと思います。
    
    </summary>
    
    
      <category term="IT" scheme="https://omathin.com/categories/IT/"/>
    
    
      <category term="Hexo" scheme="https://omathin.com/tags/Hexo/"/>
    
      <category term="Icarus" scheme="https://omathin.com/tags/Icarus/"/>
    
  </entry>
  
</feed>
